#pragma once
#include "core/Assert.h"
#include "graphics/graphicDefines.h"

#define VerifySuccess(hr) INF_VERIFY(SUCCEEDED(hr), "D3D12 Call did not succeed");


inline DXGI_FORMAT D3D12Format(INF::GFX::Format format)
{
	switch (format)
	{
	case INF::GFX::Format::UNKNOWN:
		return DXGI_FORMAT_UNKNOWN;
	case INF::GFX::Format::R8_UINT:
		return DXGI_FORMAT_R8_UINT;
	case INF::GFX::Format::R8_SINT:
		return DXGI_FORMAT_R8_SINT;
	case INF::GFX::Format::R8_UNORM:
		return DXGI_FORMAT_R8_UNORM;
	case INF::GFX::Format::R8_SNORM:
		return DXGI_FORMAT_R8_SNORM;
	case INF::GFX::Format::RG8_UINT:
		return DXGI_FORMAT_R8G8_UINT;
	case INF::GFX::Format::RG8_SINT:
		return DXGI_FORMAT_R8G8_SINT;
	case INF::GFX::Format::RG8_UNORM:
		return DXGI_FORMAT_R8G8_UNORM;
	case INF::GFX::Format::RG8_SNORM:
		return DXGI_FORMAT_R8G8_SNORM;
	case INF::GFX::Format::R16_UINT:
		return DXGI_FORMAT_R16_UINT;
	case INF::GFX::Format::R16_SINT:
		return DXGI_FORMAT_R16_SINT;
	case INF::GFX::Format::R16_UNORM:
		return DXGI_FORMAT_R16_UNORM;
	case INF::GFX::Format::R16_SNORM:
		return DXGI_FORMAT_R16_SNORM;
	case INF::GFX::Format::R16_FLOAT:
		return DXGI_FORMAT_R16_FLOAT;
	case INF::GFX::Format::BGRA4_UNORM:
		return DXGI_FORMAT_B4G4R4A4_UNORM;
	case INF::GFX::Format::B5G6R5_UNORM:
		return DXGI_FORMAT_B5G6R5_UNORM;
	case INF::GFX::Format::B5G5R5A1_UNORM:
		return DXGI_FORMAT_B5G5R5A1_UNORM;
	case INF::GFX::Format::RGBA8_UINT:
		return DXGI_FORMAT_R8G8B8A8_UINT;
	case INF::GFX::Format::RGBA8_SINT:
		return DXGI_FORMAT_R8G8B8A8_SINT;
	case INF::GFX::Format::RGBA8_UNORM:
		return DXGI_FORMAT_R8G8B8A8_UNORM;
	case INF::GFX::Format::RGBA8_SNORM:
		return DXGI_FORMAT_R8G8B8A8_SNORM;
	case INF::GFX::Format::BGRA8_UNORM:
		return DXGI_FORMAT_B8G8R8A8_UNORM;
	case INF::GFX::Format::SRGBA8_UNORM:
		return DXGI_FORMAT_R8G8B8A8_UNORM_SRGB;
	case INF::GFX::Format::SBGRA8_UNORM:
		return DXGI_FORMAT_B8G8R8A8_UNORM_SRGB;
	case INF::GFX::Format::R10G10B10A2_UNORM:
		return DXGI_FORMAT_R10G10B10A2_UNORM;
	case INF::GFX::Format::R11G11B10_FLOAT:
		return DXGI_FORMAT_R11G11B10_FLOAT;
	case INF::GFX::Format::RG16_UINT:
		return DXGI_FORMAT_R16G16_UINT;
	case INF::GFX::Format::RG16_SINT:
		return DXGI_FORMAT_R16G16_SINT;
	case INF::GFX::Format::RG16_UNORM:
		return DXGI_FORMAT_R16G16_UNORM;
	case INF::GFX::Format::RG16_SNORM:
		return DXGI_FORMAT_R16G16_SNORM;
	case INF::GFX::Format::RG16_FLOAT:
		return DXGI_FORMAT_R16G16_FLOAT;
	case INF::GFX::Format::R32_UINT:
		return DXGI_FORMAT_R32_UINT;
	case INF::GFX::Format::R32_SINT:
		return DXGI_FORMAT_R32_SINT;
	case INF::GFX::Format::R32_FLOAT:
		return DXGI_FORMAT_R32_FLOAT;
	case INF::GFX::Format::RGBA16_UINT:
		return DXGI_FORMAT_R16G16B16A16_UINT;
	case INF::GFX::Format::RGBA16_SINT:
		return DXGI_FORMAT_R16G16B16A16_SINT;
	case INF::GFX::Format::RGBA16_FLOAT:
		return DXGI_FORMAT_R16G16B16A16_FLOAT;
	case INF::GFX::Format::RGBA16_UNORM:
		return DXGI_FORMAT_R16G16B16A16_UNORM;
	case INF::GFX::Format::RGBA16_SNORM:
		return DXGI_FORMAT_R16G16B16A16_SNORM;
	case INF::GFX::Format::RG32_UINT:
		return DXGI_FORMAT_R32G32_UINT;
	case INF::GFX::Format::RG32_SINT:
		return DXGI_FORMAT_R32G32_SINT;
	case INF::GFX::Format::RG32_FLOAT:
		return DXGI_FORMAT_R32G32_FLOAT;
	case INF::GFX::Format::RGB32_UINT:
		return DXGI_FORMAT_R32G32_UINT;
	case INF::GFX::Format::RGB32_SINT:
		return DXGI_FORMAT_R32G32_SINT;
	case INF::GFX::Format::RGB32_FLOAT:
		return DXGI_FORMAT_R32G32_FLOAT;
	case INF::GFX::Format::RGBA32_UINT:
		return DXGI_FORMAT_R32G32B32A32_UINT;
	case INF::GFX::Format::RGBA32_SINT:
		return DXGI_FORMAT_R32G32B32A32_SINT;
	case INF::GFX::Format::RGBA32_FLOAT:
		return DXGI_FORMAT_R32G32B32A32_FLOAT;
	case INF::GFX::Format::D16:
		return DXGI_FORMAT_D16_UNORM;
	case INF::GFX::Format::D24S8:
		return DXGI_FORMAT_D24_UNORM_S8_UINT;
	case INF::GFX::Format::X24G8_UINT:
		return DXGI_FORMAT_X24_TYPELESS_G8_UINT;
	case INF::GFX::Format::D32:
		return DXGI_FORMAT_D32_FLOAT;
	case INF::GFX::Format::D32S8:
		return DXGI_FORMAT_UNKNOWN; //not supported?
	case INF::GFX::Format::X32G8_UINT:
		return DXGI_FORMAT_X32_TYPELESS_G8X24_UINT;
	case INF::GFX::Format::BC1_UNORM:
		return DXGI_FORMAT_BC1_UNORM;
	case INF::GFX::Format::BC1_UNORM_SRGB:
		return DXGI_FORMAT_BC1_UNORM_SRGB;
	case INF::GFX::Format::BC2_UNORM:
		return DXGI_FORMAT_BC2_UNORM;
	case INF::GFX::Format::BC2_UNORM_SRGB:
		return DXGI_FORMAT_BC2_UNORM_SRGB;
	case INF::GFX::Format::BC3_UNORM:
		return DXGI_FORMAT_BC3_UNORM;
	case INF::GFX::Format::BC3_UNORM_SRGB:
		return DXGI_FORMAT_BC3_UNORM_SRGB;
	case INF::GFX::Format::BC4_UNORM:
		return DXGI_FORMAT_BC4_UNORM;
	case INF::GFX::Format::BC4_SNORM:
		return DXGI_FORMAT_BC4_SNORM;
	case INF::GFX::Format::BC5_UNORM:
		return DXGI_FORMAT_BC5_UNORM;
	case INF::GFX::Format::BC5_SNORM:
		return DXGI_FORMAT_BC5_SNORM;
	case INF::GFX::Format::BC6H_UFLOAT:
		return DXGI_FORMAT_BC6H_UF16;
	case INF::GFX::Format::BC6H_SFLOAT:
		return DXGI_FORMAT_BC6H_SF16;
	case INF::GFX::Format::BC7_UNORM:
		return DXGI_FORMAT_BC7_UNORM;
	case INF::GFX::Format::BC7_UNORM_SRGB:
		return DXGI_FORMAT_BC7_UNORM_SRGB;
	default:
		return DXGI_FORMAT_UNKNOWN;
	}
}

inline D3D12_RESOURCE_STATES D3D12TransitionFlags(INF::GFX::TRANSITION_STATES_FLAGS flags)
{
	D3D12_RESOURCE_STATES d3dFlags = D3D12_RESOURCE_STATE_COMMON;

	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::PRESENT)
		d3dFlags |= D3D12_RESOURCE_STATE_PRESENT;
	if(flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::INDEX_BUFFER)
		d3dFlags |= D3D12_RESOURCE_STATE_INDEX_BUFFER;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::RENDER_TARGET)
		d3dFlags |= D3D12_RESOURCE_STATE_RENDER_TARGET;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::UNORDERED_ACCESS)
		d3dFlags |= D3D12_RESOURCE_STATE_UNORDERED_ACCESS;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::DEPTH_WRITE)
		d3dFlags |= D3D12_RESOURCE_STATE_DEPTH_WRITE;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::DEPTH_READ)
		d3dFlags |= D3D12_RESOURCE_STATE_DEPTH_READ;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::NON_PIXEL_SHADER_RESOURCE)
		d3dFlags |= D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::PIXEL_SHADER_RESOURCE)
		d3dFlags |= D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::STREAM_OUT)
		d3dFlags |= D3D12_RESOURCE_STATE_STREAM_OUT;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::COPY_DEST)
		d3dFlags |= D3D12_RESOURCE_STATE_COPY_DEST;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::COPY_SOURCE)
		d3dFlags |= D3D12_RESOURCE_STATE_COPY_SOURCE;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::RESOLVE_DEST)
		d3dFlags |= D3D12_RESOURCE_STATE_RESOLVE_DEST;
	if (flags & (INF::GFX::TRANSITION_STATES_FLAGS)INF::GFX::TRANSITION_STATES::RESOLVE_SOURCE)
		d3dFlags |= D3D12_RESOURCE_STATE_RESOLVE_SOURCE;

	return d3dFlags;
}