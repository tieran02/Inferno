using System.IO; // For Path.Combine
using System;
using Sharpmake; // Contains the entire Sharpmake object library.
using System.Collections.Generic;

namespace Inferno
{
    // Represents the project that will be generated by Sharpmake and that contains
    // the sample C++ code.
    [Generate]
    public class GLFWLib : InfernoLib
    {
        readonly string GLFW_ROOT;
        public GLFWLib() : base("GLFW")
        {
            GLFW_ROOT = Path.Combine(Defines.Paths.INFERNO_THIRD_PARTY, @"glfw");
            

            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/internal.h"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/mappings.h"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/context.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/init.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/input.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/monitor.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/window.c"));




            //win32
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/win32_init.c"));
			SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/win32_joystick.c"));
			SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/win32_monitor.c"));
			SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/win32_time.c"));
			SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/win32_thread.c"));
			SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/win32_window.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/wgl_context.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/egl_context.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/osmesa_context.c"));
            SourceFiles.Add(Path.Combine(GLFW_ROOT, @"src/vulkan.c"));

            //SourceRootPath = Defines.Paths.INFERNO_THIRD_PARTY;
            //AdditionalSourceRootPaths.Add(Defines.Paths.INFERNO_GRAPHICS_INC);
        }

        public override void ConfigureAll(Project.Configuration conf, Target target)
        {
            base.ConfigureAll(conf, target);

            conf.Defines.Add("_GLFW_WIN32");
            conf.IncludePaths.Add(Path.Combine(GLFW_ROOT, @"include"));
        }
    }
}